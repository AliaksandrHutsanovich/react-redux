// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Unit tests for tree of categories full render test 1`] = `
<Connect(Component)
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <TreeOfCategories
    categories={
      Array [
        Object {
          "key": "categories-0",
          "subCategories": Array [
            Object {
              "key": "categories-0-subCategories-0",
              "subCategories": Array [],
              "tasks": Immutable.List [
                Immutable.Map {
                  "title": "integral",
                  "Description": "find",
                  "isFinished": false,
                },
                Immutable.Map {
                  "title": "different",
                  "Description": "find",
                  "isFinished": false,
                },
              ],
              "title": "highMathematic",
            },
            Object {
              "key": "categories-0-subCategories-1",
              "subCategories": Array [],
              "tasks": Immutable.List [
                Immutable.Map {
                  "title": "table",
                  "Description": "constit",
                  "isFinished": true,
                },
                Immutable.Map {
                  "title": "multi",
                  "Description": "count",
                  "isFinished": false,
                },
              ],
              "title": "lowMathematic",
            },
          ],
          "tasks": Immutable.List [
            Immutable.Map {
              "title": "graph",
              "Description": "draw",
              "isFinished": true,
            },
            Immutable.Map {
              "title": "counting",
              "Description": "count",
              "isFinished": true,
            },
          ],
          "title": "Mathematic",
        },
        Object {
          "key": "categories-1",
          "subCategories": Array [
            Object {
              "key": "categories-1-subCategories-0",
              "subCategories": Array [
                Object {
                  "key": "categories-1-subCategories-0-subCategories-0",
                  "subCategories": Array [],
                  "tasks": Immutable.List [
                    Immutable.Map {
                      "title": "peoples",
                      "Description": "study",
                      "isFinished": true,
                    },
                    Immutable.Map {
                      "title": "capitals",
                      "Description": "study",
                      "isFinished": false,
                    },
                  ],
                  "title": "smallHighGeography",
                },
              ],
              "tasks": Immutable.List [
                Immutable.Map {
                  "title": "polit",
                  "Description": "study",
                  "isFinished": false,
                },
                Immutable.Map {
                  "title": "mountain",
                  "Description": "study",
                  "isFinished": false,
                },
              ],
              "title": "highGeography",
            },
          ],
          "tasks": Immutable.List [
            Immutable.Map {
              "title": "map",
              "Description": "study",
              "isFinished": false,
            },
            Immutable.Map {
              "title": "drawing",
              "Description": "draw",
              "isFinished": false,
            },
          ],
          "title": "Geography",
        },
      ]
    }
    dispatch={[Function]}
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <Tree
      checkable={false}
      className="draggableTree"
      draggable={true}
      onSelect={[Function]}
      openAnimation={
        Object {
          "appear": null,
          "enter": [Function],
          "leave": [Function],
        }
      }
      showIcon={false}
    >
      <Tree
        autoExpandParent={false}
        checkStrictly={false}
        checkable={false}
        className="ant-tree-icon-hide draggableTree"
        defaultCheckedKeys={Array []}
        defaultExpandAll={false}
        defaultExpandParent={true}
        defaultExpandedKeys={Array []}
        defaultSelectedKeys={Array []}
        disabled={false}
        draggable={true}
        multiple={false}
        onSelect={[Function]}
        openAnimation={
          Object {
            "appear": null,
            "enter": [Function],
            "leave": [Function],
          }
        }
        prefixCls="ant-tree"
        selectable={true}
        showIcon={false}
        showLine={false}
        switcherIcon={[Function]}
      >
        <ul
          className="ant-tree ant-tree-icon-hide draggableTree"
          role="tree"
          unselectable="on"
        >
          <TreeNode
            checked={false}
            dragOver={false}
            dragOverGapBottom={false}
            dragOverGapTop={false}
            eventKey="categories-0"
            expanded={false}
            halfChecked={false}
            key="categories-0"
            loaded={false}
            loading={false}
            pos="0-0"
            selected={false}
            title={
              <Memo(CategoryItem)
                path="categories-0"
                title="Mathematic"
              />
            }
          >
            <li
              className="ant-tree-treenode-switcher-close"
              onDragEnd={[Function]}
              onDragEnter={[Function]}
              onDragLeave={[Function]}
              onDragOver={[Function]}
              onDrop={[Function]}
              role="treeitem"
            >
              <span
                className="ant-tree-switcher ant-tree-switcher_close"
                onClick={[Function]}
              >
                <switcherIcon
                  checked={false}
                  dragOver={false}
                  dragOverGapBottom={false}
                  dragOverGapTop={false}
                  eventKey="categories-0"
                  expanded={false}
                  halfChecked={false}
                  isLeaf={false}
                  loaded={false}
                  loading={false}
                  pos="0-0"
                  selected={false}
                  title={
                    <Memo(CategoryItem)
                      path="categories-0"
                      title="Mathematic"
                    />
                  }
                >
                  <Icon
                    className="ant-tree-switcher-icon"
                    theme="filled"
                    type="caret-down"
                  >
                    <LocaleReceiver
                      componentName="Icon"
                    >
                      <i
                        aria-label="icon: caret-down"
                        className="anticon anticon-caret-down ant-tree-switcher-icon"
                      >
                        <IconReact
                          className=""
                          type="caret-down-fill"
                        >
                          <svg
                            aria-hidden="true"
                            className=""
                            data-icon="caret-down"
                            fill="currentColor"
                            height="1em"
                            key="svg-caret-down"
                            viewBox="0 0 1024 1024"
                            width="1em"
                          >
                            <path
                              d="M840.4 300H183.6c-19.7 0-30.7 20.8-18.5 35l328.4 380.8c9.4 10.9 27.5 10.9 37 0L858.9 335c12.2-14.2 1.2-35-18.5-35z"
                              key="svg-caret-down-svg-0"
                            />
                          </svg>
                        </IconReact>
                      </i>
                    </LocaleReceiver>
                  </Icon>
                </switcherIcon>
              </span>
              <span
                aria-grabbed={true}
                className="ant-tree-node-content-wrapper ant-tree-node-content-wrapper-close draggable"
                draggable={true}
                onClick={[Function]}
                onContextMenu={[Function]}
                onDoubleClick={[Function]}
                onDragStart={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                title=""
              >
                <span
                  className="ant-tree-title"
                >
                  <Memo(CategoryItem)
                    path="categories-0"
                    title="Mathematic"
                  >
                    <p
                      className="itemText"
                    >
                      Mathematic
                    </p>
                  </Memo(CategoryItem)>
                </span>
              </span>
              <Animate
                animation={
                  Object {
                    "appear": null,
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                component=""
                componentProps={Object {}}
                showProp="data-expanded"
                transitionAppear={false}
                transitionEnter={true}
                transitionLeave={true}
              />
            </li>
          </TreeNode>
          <TreeNode
            checked={false}
            dragOver={false}
            dragOverGapBottom={false}
            dragOverGapTop={false}
            eventKey="categories-1"
            expanded={false}
            halfChecked={false}
            key="categories-1"
            loaded={false}
            loading={false}
            pos="0-1"
            selected={false}
            title={
              <Memo(CategoryItem)
                path="categories-1"
                title="Geography"
              />
            }
          >
            <li
              className="ant-tree-treenode-switcher-close"
              onDragEnd={[Function]}
              onDragEnter={[Function]}
              onDragLeave={[Function]}
              onDragOver={[Function]}
              onDrop={[Function]}
              role="treeitem"
            >
              <span
                className="ant-tree-switcher ant-tree-switcher_close"
                onClick={[Function]}
              >
                <switcherIcon
                  checked={false}
                  dragOver={false}
                  dragOverGapBottom={false}
                  dragOverGapTop={false}
                  eventKey="categories-1"
                  expanded={false}
                  halfChecked={false}
                  isLeaf={false}
                  loaded={false}
                  loading={false}
                  pos="0-1"
                  selected={false}
                  title={
                    <Memo(CategoryItem)
                      path="categories-1"
                      title="Geography"
                    />
                  }
                >
                  <Icon
                    className="ant-tree-switcher-icon"
                    theme="filled"
                    type="caret-down"
                  >
                    <LocaleReceiver
                      componentName="Icon"
                    >
                      <i
                        aria-label="icon: caret-down"
                        className="anticon anticon-caret-down ant-tree-switcher-icon"
                      >
                        <IconReact
                          className=""
                          type="caret-down-fill"
                        >
                          <svg
                            aria-hidden="true"
                            className=""
                            data-icon="caret-down"
                            fill="currentColor"
                            height="1em"
                            key="svg-caret-down"
                            viewBox="0 0 1024 1024"
                            width="1em"
                          >
                            <path
                              d="M840.4 300H183.6c-19.7 0-30.7 20.8-18.5 35l328.4 380.8c9.4 10.9 27.5 10.9 37 0L858.9 335c12.2-14.2 1.2-35-18.5-35z"
                              key="svg-caret-down-svg-0"
                            />
                          </svg>
                        </IconReact>
                      </i>
                    </LocaleReceiver>
                  </Icon>
                </switcherIcon>
              </span>
              <span
                aria-grabbed={true}
                className="ant-tree-node-content-wrapper ant-tree-node-content-wrapper-close draggable"
                draggable={true}
                onClick={[Function]}
                onContextMenu={[Function]}
                onDoubleClick={[Function]}
                onDragStart={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                title=""
              >
                <span
                  className="ant-tree-title"
                >
                  <Memo(CategoryItem)
                    path="categories-1"
                    title="Geography"
                  >
                    <p
                      className="itemText"
                    >
                      Geography
                    </p>
                  </Memo(CategoryItem)>
                </span>
              </span>
              <Animate
                animation={
                  Object {
                    "appear": null,
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                component=""
                componentProps={Object {}}
                showProp="data-expanded"
                transitionAppear={false}
                transitionEnter={true}
                transitionLeave={true}
              />
            </li>
          </TreeNode>
        </ul>
      </Tree>
    </Tree>
  </TreeOfCategories>
</Connect(Component)>
`;
